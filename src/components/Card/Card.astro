---
interface Props {
  title: string;
  cardtype?: boolean;
}

const { title, cardtype = true } = Astro.props;
---

{
  cardtype === true ? (
    <div class="flex items-center justify-center select-none mt-6">
      <div class="relative w-96 h-44 bg-white rounded-lg p-5 overflow-hidden transition-transform duration-600 ease-in group">
        <div class="absolute top-[-15px] right-[-15px] w-6 h-56 bg-blue-500 rounded-full transform scale-100 transition-transform duration-300 ease-out origin-center group-hover:scale-[40] group-hover:delay-20" />
        <h4 class="text-lg font-medium text-black">{title}</h4>
        <p class="mb-2 text-sm text-black">
          <slot />
        </p>
        <div class="absolute inset-0 flex items-center justify-center text-white text-lg font-bold opacity-0 group-hover:opacity-100 transition-opacity duration-300">
          Ver m√°s
        </div>
      </div>
    </div>
  ) : (
  <div class="flex items-center justify-center mt-6 [perspective:1000px]">
      <div class="relative w-96 h-44 transition-all duration-500 [transform-style:preserve-3d] group hover:[transform:rotateY(180deg)]">
        {/* Front */}
        <div class="absolute inset-0 bg-white rounded-lg flex items-center justify-center [backface-visibility:hidden]">
          <h4 class="text-lg font-medium text-black">{title}</h4>
        </div>
        
        {/* Back */}
        <div class="absolute inset-0 bg-blue-500 rounded-lg p-5 flex items-center justify-center [backface-visibility:hidden] [transform:rotateY(180deg)]">
          <p class="text-white text-center">
            <slot/>
          </p>
        </div>
      </div>
    </div>
)
}
